[transmogrifier]
include = collective.jsonmigrator.plone25
pipeline =
#   SOURCES
    remotesource

#    statistics

#   SKIPPING
    skip-some-types

#   FIXING
    fix-type-folder
    fix-type-article
    fix-type-image
    fix-type-file
    fix-type-link
#    fix-path
#    fix-type

#   CREATING
    constructor
    schema
#    uid
#    workflow
#    browser-default
#    topic-criteria
#    reindex (this will change modification date)

[remotesource]
remote-url = http://plone3.pretaweb.com
remote-username = djay
remote-password = blueblue6
remote-path = /pretaweb
remote-crawl-depth = 2
remote-skip-path +=
    /FckHTTPCache
    /PloneArticleThumbRAMCache
    /SiteRoot
    /0bi
    /0exportFileListings
    /0fixFileListings
    /0fixHelp
    /0indexObject
    /0listTypes
    /0news
    /0tb
    /0test
    /0testBelimoInside
    /atse_template_tool
    /belimo_activedirectory
    /belimo_ad_ramcache
    /belimo_tool
    /belimo_uid_ramcache
    /belimoadtestquery
    /belimobaseinstall
    /belimobasesetup
    /belimotypesdoc
    /challenge_hook
    /copy_of_repairskills
    /create_csv
    /enfold_info
    /export_initial_structure
    /generateFieldsetSwitch
    /getDanburyOffset
    /getHinwilOffset
    /getInvisibleFieldsets
    /index_html
    /intranet
    /portal_countryutils
    /portal_attachment
    /preferences
    /removeOldToolboxLinks
    /repairskills
    /schema_editor_tool
    /tb_updateSchema
    /telefonliste
    /uidprint
    /wolfietest
    /wolfietest_imagetest
    /workflow_manager

    /Members

[skip-some-types]
blueprint = collective.transmogrifier.sections.condition
condition = python:item['_type'] not in [
                    'Plone Site',
                    'BATImage',
                    'BContactCategoryFolder',
                    'BDictionary',
                    'BDictionaryTerm',
                    'BFaqItem',
                    'BFile',
                    'BFolder',
                    'BForms',
                    'BGlossary',
                    'BGlossaryCategory',
                    'BGlossaryTerm',
                    'BHomepage',
                    'BImageDB',
                    'BImageDBFolder',
                    'BLanguageNeutralContent',
                    'BPreferences',
                    ]

[fix-type-folder]
blueprint = collective.transmogrifier.sections.inserter
key = string:_type
value = string:Folder
condition = python:item['_type'] in [
                    'BAgendaFolder',
                    'BAgendaRootFolder',
                    'BAgendaYearFolder',
                    'BCompoundArticle',
                    'BContactEmployeeFolder',
                    'BContactFolder',
                    'BContactLocationFolder',
                    'BContactSubcategoryFolder',
                    'BEmergencyFolder',
                    'BFaqFolder',
                    'BFaqRootFolder',
                    'BFavoriteFolder',
                    'BHelpFolder',
                    'BImageUpload',
                    'BImageUploadFolder',
                    'BInsideTopFolder',
                    'BLanguageNeutralFolder',
                    'BNewsFolder',
                    ]

[fix-type-article]
blueprint = collective.transmogrifier.sections.inserter
key = string:_type
value = string:Article
condition = python:item['_type'] in [
                    'BArticle',
                    'BEmergencyItem',
                    'BFaqItemFolder',
                    'BHelpItem',
                    'NewsArticle',
                    ]

[fix-type-image]
blueprint = collective.transmogrifier.sections.inserter
key = string:_type
value = string:Image
condition = python:item['_type'] in [
                    'BStandardImage',
                    'BImageUploadImage',
                    'BImage',
                    ]

[fix-type-file]
blueprint = collective.transmogrifier.sections.inserter
key = string:_type
value = string:File
condition = python:item['_type'] in [
                    'BStandardFile',
                    ]

[fix-type-link]
blueprint = collective.transmogrifier.sections.inserter
key = string:_type
value = string:Link
condition = python:item['_type'] in [
                    'BStandardLink',
                    'BFavorite',
                    ]

[fix-path]
blueprint = somepackage.pathconverter

